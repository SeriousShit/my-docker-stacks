version: '2'

networks:
    loadbalancer-net:
        external: true
    drone:
        driver: overlay

volumes:
    drone-server-data:

configs:
  server-env:
    file: ./env/.drone-env
  agent-env:
    file: ./env/.drone-env

services:
    drone-server:
        image: drone/drone:0.8

        ports:
            - 8000:8000
        networks:
            - drone
            - loadbalancer-net
        volumes:
            - drone-server-data:/var/lib/drone/
        configs:
            - source: server-env
                target: /.env
        restart: always
        environment:
            - DRONE_OPEN=true
            - DRONE_HOST=${DRONE_HOST}
            - DRONE_GITHUB=true
            - DRONE_GITHUB_CLIENT=${DRONE_GITHUB_CLIENT}
            - DRONE_GITHUB_SECRET=${DRONE_GITHUB_SECRET}
            - DRONE_SECRET=${DRONE_SECRET}
        deploy:
            placement:
                constraints:
                    - node.role==worker
            replicas: 1
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
            labels:
                - traefik.frontend.rule=Host:drone.hagen-hasenbalg.de
                - traefik.docker.network=traefik
                - traefik.port=8000


    drone-agent:
        image: drone/agent:0.8
        command: agent
        networks:
            - drone
        configs:
            - source: agent-env
                target: /.env
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            - DRONE_SERVER=drone-server:9000
            - DRONE_SECRET=${DRONE_SECRET}
        deploy:
            placement:
                constraints:
                    - node.role==worker
            replicas: 3
            restart_policy:
                condition: on-failure
                delay: 5s
                max_attempts: 3
                window: 120s
            update_config:
                parallelism: 1
                delay: 20s