version: "3.3"

networks:
  loadbalancer-net:
    external: true
  drone:
    driver: overlay

volumes:
  drone-server-data:

services:
  drone-server:
    image: drone/drone:0.8

    ports:
      - 8000:8000
    networks:
      - drone
      - loadbalancer-net
    volumes:
      - drone-server-data:/var/lib/drone/
    configs:
      - source: drone_config
        target: /.env
    restart: always
    deploy:
      # placement:
      #   constraints:
      #     - node.role==worker
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      labels:
        - traefik.frontend.rule=Host:drone.hagen-hasenbalg.de
        - traefik.docker.network=traefik
        - traefik.port=8000


  drone-agent:
    image: drone/agent:0.8
    command: agent
    networks:
      - drone
    configs:
      - source: drone_config
        target: /.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      # placement:
      #   constraints:
      #     - node.role==worker
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
      update_config:
        parallelism: 1
        delay: 20s

configs:
  drone_config:
    file: ./env/.drone-env
